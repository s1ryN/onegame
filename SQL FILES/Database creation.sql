DROP DATABASE IF EXISTS michalpisarik;
CREATE DATABASE IF NOT EXISTS michalpisarik;
USE michalpisarik;

CREATE TABLE IF NOT EXISTS michalpisarik.users (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY UNIQUE,
    username VARCHAR(255) NOT NULL UNIQUE,
	password VARCHAR(255) NOT NULL,
	email VARCHAR(255) NOT NULL UNIQUE,
	registrationtime TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
	lastlogintime TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    );

CREATE TABLE IF NOT EXISTS michalpisarik.posts (
	id INT NOT NULL AUTO_INCREMENT UNIQUE PRIMARY KEY,
	user_id INT NULL DEFAULT NULL,
	content VARCHAR(500) NOT NULL,
    post_time TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    like_count INT NULL DEFAULT '0',
	FOREIGN KEY (user_id) REFERENCES users(id)
    );

CREATE TABLE IF NOT EXISTS michalpisarik.comments (
	id INT NOT NULL AUTO_INCREMENT UNIQUE PRIMARY KEY,
    post_id INT NULL DEFAULT NULL,
    user_id INT NULL DEFAULT NULL,
    comment_text VARCHAR(500) NULL DEFAULT NULL,
    comment_time TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY (post_id) REFERENCES posts(id),
	FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS michalpisarik.media (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY UNIQUE,
    media_url VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS michalpisarik.post_media (
	post_id INT NOT NULL PRIMARY KEY,
    media_id INT NOT NULL PRIMARY KEY,
    FOREIGN KEY (post_id) REFERENCES posts(id),
    FOREIGN KEY (media_id) REFERENCES media(id)
);

CREATE TABLE IF NOT EXISTS michalpisarik.reactions (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY UNIQUE,
	post_id INT NULL DEFAULT NULL,
	user_id INT NULL DEFAULT NULL,
    FOREIGN KEY (post_id) REFERENCES posts(id),
    FOREIGN KEY (media_id) REFERENCES media(id)
);